(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{628:function(t,e,s){"use strict";s.r(e);var n=s(3),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"find-和-some的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-和-some的区别"}},[t._v("#")]),t._v(" find 和 some的区别")]),t._v(" "),s("h3",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[t._v("#")]),t._v(" some")]),t._v(" "),s("p",[t._v("定义和用法：some() 方法用于检测数组中的元素是否满足指定条件（函数提供）。\nsome() 方法会依次执行数组的每个元素：\n如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。\n如果没有满足条件的元素，则返回false。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意： some() 不会对空数组进行检测。")]),t._v(" "),s("p",[t._v("注意： some() 不会改变原始数组。")])]),t._v(" "),s("h3",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" find")]),t._v(" "),s("p",[t._v("定义和用法 : find() 方法返回通过测试（函数内判断）的数组的第一个元素的值。\nfind() 方法为数组中的每个元素都调用一次函数执行：\n当数组中的元素在测试条件时返回 true 时, find() 返回符合条件的元素，之后的值不会再调用执行函数。\n如果没有符合条件的元素返回 undefined")]),t._v(" "),s("blockquote",[s("p",[t._v("注意: find() 对于空数组，函数是不会执行的。")]),t._v(" "),s("p",[t._v("注意: find() 并没有改变数组的原始值。")])]),t._v(" "),s("h2",{attrs:{id:"区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),s("p",[t._v("同样是用来检测数组中符合条件的元素，但是 some 和 find 的返回值不同，some方法找到符合条件的值则立即返回true，全都不符合则返回false，而 find 方法找到符合条件的值后会返回符合条件的那一项 ,所以在开发中视业务需求选择对应的方法。")])])}),[],!1,null,null,null);e.default=a.exports}}]);